name: Build docker image

# Controls when the action will run.
on:
  # manual trigger a new image build for dockerhub 
  workflow_dispatch

jobs:
  push_to_Docker_Hub:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # build docker image and push to docker hub
    # only if the app build and test successfully
    #needs: [build_test]

    steps:
      - name: checkout repo
        uses: actions/checkout@v3.0.0

      - name: set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2.10.0
        with:
          context: ./backend
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/whitelabel-backend:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: push_to_Docker_Hub
  #   steps:
  #     - name: Deploy to Digital Ocean droplet via SSH action
  #       uses: appleboy/ssh-action@v0.1.4
  #       env:
  #         # DATABASE_URL: "mongodb+srv://${{ secrets.MONGODB_USER }}:${{ secrets.MONGODB_PASSWORD }}@whitelabel.9vpsv.mongodb.net/myFirstDatabase?retryWrites=true&w=majority"
  #         # ADMIN_USERS: "0xe3bbf29f034fA780407Fd11dac7A0B3938b1bc6a,0xe3bbf29f034fA780407Fd11dac7A0B3938b1bc6b"
  #         LOG_LEVEL: "error"
  #         CONTRACT_ADDRESS: "0xBD775bc3577596D416BF15e9827e9039cD7B02d6"
  #         SIGNER_PKEY: ${{ secrets.SIGNER_PKEY }}
  #         APP_PORT: 8080
  #         CHAIN_ID: "3"
  #         WHITELISTING_DOMAIN: "Magic Mondrian"
  #         WHITELISTING_VERSION: "1"
  #         IMAGE_NAME: "amrap030/whitelabel-backend"
  #         CONTAINER_NAME: "whitelabel-backend"
  #         REDIS_HOST: "redis"
  #         REDIS_PORT: 6379
  #         TRUSTED_ORIGINS: "https://magic-mondrian.netlify.app"
  #       with:
  #         host: ${{ secrets.DIGITALOCEAN_HOST }}
  #         username: ${{ secrets.DIGITALOCEAN_USERNAME }}
  #         key: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  #         envs: LOG_LEVEL,CONTRACT_ADDRESS,SIGNER_PKEY,IMAGE_NAME,CONTAINER_NAME,APP_PORT,REDIS_HOST,REDIS_PORT,CHAIN_ID,WHITELISTING_DOMAIN,WHITELISTING_VERSION,TRUSTED_ORIGINS
  #         script: |
  #           docker stop $CONTAINER_NAME
  #           docker rm $CONTAINER_NAME
  #           docker rmi $(docker images -q $IMAGE_NAME) || true
  #           docker rm -f $(docker ps -a -q)
  #           docker rmi -f $(docker images -aq)
  #           docker network rm mondrian
  #           docker pull $IMAGE_NAME:latest
  #           docker network create -d bridge mondrian
  #           docker run --restart unless-stopped --network mondrian -p 6379 --name redis -d redis redis-server --save 60 1 --loglevel warning
  #           docker run -d --restart unless-stopped --network mondrian -p 8080:8080 -e "LOG_LEVEL=$LOG_LEVEL" -e "WHITELISTING_DOMAIN=$WHITELISTING_DOMAIN" -e "WHITELISTING_VERSION=$WHITELISTING_VERSION" -e "CHAIN_ID=$CHAIN_ID" -e "APP_PORT=$APP_PORT" -e "REDIS_HOST=$REDIS_HOST" -e "REDIS_PORT=$REDIS_PORT" -e "CONTRACT_ADDRESS=$CONTRACT_ADDRESS" -e "SIGNER_PKEY=$SIGNER_PKEY" -e "TRUSTED_ORIGINS=$TRUSTED_ORIGINS" --name $CONTAINER_NAME $IMAGE_NAME
